/* ":root" -> this is a CSS pseudo-class that targets the highest-level element in the DOM, which is always the <html> tag.

•	Use it to define global styles like fonts, themes, or CSS variables.
•	It affects everything on the page unless overridden by more specific selectors. */

/* "#root" -> This is a CSS ID selector, targeting the element with the ID root — which, in a React app, is the <div id="root"></div> in your index.html.

•	This specifically styles the React mounting point, i.e., the wrapper for everything your React app renders.
•	You often use this to set max-width, centering, or layout rules for your entire app. */

/*! ============================================================ */
/*!     Global CSS Variables and Defaults
/**    Define global fonts, theme colors, base styling, and responsive font sizes.
/*! ============================================================ */
:root {
  /*? Font families */
  --font-heading: "Gaegu", sans-serif;
  --font-body: "Verdana", Geneva, Tahoma, sans-serif;

  /*? Font size for form inputs to prevent auto-zoom on mobile */
  --font-size-form: 16px;

  /*? Responsive Typography Scale - Fluid font sizes using clamp */
  --font-size-xs: clamp(0.75rem, 0.5vw + 0.5rem, 0.875rem);
  --font-size-sm: clamp(0.875rem, 0.75vw + 0.5rem, 1rem);
  --font-size-base: clamp(1rem, 1vw + 0.25rem, 1.125rem);
  --font-size-lg: clamp(1.125rem, 1.25vw + 0.5rem, 1.25rem);
  --font-size-xl: clamp(1.25rem, 1.5vw + 0.5rem, 1.5rem);
  --font-size-2xl: clamp(1.5rem, 2vw + 0.5rem, 2rem);
  --font-size-3xl: clamp(2rem, 3vw + 0.5rem, 2.5rem);
  --font-size-4xl: clamp(2.5rem, 4vw + 0.5rem, 3rem);
  --font-size-5xl: clamp(3rem, 5vw + 0.5rem, 3.5rem);

  /*? Colors */
  --color-text-heading: #0d0024;
  --color-text-body: #0d0024;

  --color-background: #999fc9;
  --color-primary: #8113d5;
  --color-accent: #b95d28;

  --color-form-input: #1f0054;
  --color-form-input-focus: #e196ff;
}

/*! ============================================================ */
/*!     Font smoothing and rendering for better legibility
/**     Apply to html element for consistent global effect
/*! ============================================================ */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  font-synthesis: none;
}

/*! ============================================================ */
/*!     Box Sizing Reset
/**     Ensure consistent box sizing across all elements.
/*! ============================================================ */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/*! ============================================================ */
/*!     Body Base Styling
/**     Apply main body font, default text color, and responsive font size.
/*! ============================================================ */
body {
  font-family: var(--font-body);
  font-weight: 400;
  line-height: 1.7;
  color: var(--color-text-body);
  font-size: var(--font-size-base);
  background-color: var(--color-background);
}

/*! ============================================================ */
/*!     Image and Media Elements
/**     Make images and media responsive and prevent overflow.
/*! ============================================================ */
img,
picture,
video,
canvas,
svg {
  display: block;
}

/*! ============================================================ */
/*!     Layout Container
/**     Provides full-height flex container for header, main, footer.
/*! ============================================================ */
.layout-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  padding: 0rem !important;
}

/*! ============================================================ */
/*!     Layout Main Content
/**     Allows main content area to expand and push footer to bottom.
/*! ============================================================ */
.layout-main {
  flex-grow: 1;
}

/*! ============================================================ */
/*!     Accessibility Helpers
/**     Screen reader only text, focus outlines, etc.
/*! ============================================================ */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow-x: hidden !important;
  overflow-y: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.skip-navigation {
  position: absolute;
  top: -40px;
  left: 6px;
  background: var(--color-primary);
  color: white;
  padding: 8px;
  text-decoration: none;
  border-radius: 4px;
  z-index: 9999;
  font-weight: bold;
  transition: top 0.2s ease;
}

.skip-navigation:focus {
  top: 6px;
  outline: 2px solid #ffffff;
  outline-offset: 2px;
}

/* Enhanced focus indicators for all interactive elements */
button:focus,
a:focus,
input:focus,
textarea:focus,
select:focus,
[role="button"]:focus,
[tabindex]:focus {
  outline: 3px solid var(--color-accent) !important;
  outline-offset: 2px !important;
  box-shadow: 0 0 0 1px #ffffff !important;
}

/* High contrast focus ring for better visibility */
button:focus-visible,
a:focus-visible,
input:focus-visible,
textarea:focus-visible,
select:focus-visible,
[role="button"]:focus-visible,
[tabindex]:focus-visible {
  outline: 3px solid var(--color-accent) !important;
  outline-offset: 2px !important;
  box-shadow: 0 0 0 1px #ffffff, 0 0 8px rgba(185, 93, 40, 0.5) !important;
}

/* Remove default focus styling when we're providing custom */
button:focus:not(:focus-visible),
a:focus:not(:focus-visible),
input:focus:not(:focus-visible),
textarea:focus:not(:focus-visible),
select:focus:not(:focus-visible),
[role="button"]:focus:not(:focus-visible),
[tabindex]:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

/*! ============================================================ */
/*!     Utility Classes (optional)
/*! ============================================================ */
.hidden {
  display: none !important;
}

/*! ============================================================ */
/*!     Responsive Typography Example
/**     Use media queries for fine control on smaller screens.
/*! ============================================================ */
@media (max-width: 600px) {
  :root {
    --font-size-base: clamp(0.75rem, 3vw + 0.1rem, 0.95rem);
  }
  body,
  #root {
    padding: 0;
    margin: 0;
  }
}

@media (max-width: 360px) {
  :root {
    --font-size-base: clamp(0.7rem, 3.5vw + 0.1rem, 0.9rem);
  }
}

/*! ============================================================ */
/*!     Transition for smooth animations
/*! ============================================================ */
/* * {
  transition: all 0.25s ease-in-out;
} */

/*! ============================================================ */
/*!     iOS Text Selection - Alternative Approaches
/**     iOS Safari has severe limitations with ::selection
/*! ============================================================ */

/* Method 1: Direct hex values (no CSS variables) */
::selection {
  background: #b95d28 !important;
  background-color: #b95d28 !important;
  color: #ffffff !important;
}

::-webkit-selection {
  background: #b95d28 !important;
  background-color: #b95d28 !important;
  color: #ffffff !important;
}

::-moz-selection {
  background: #b95d28 !important;
  background-color: #b95d28 !important;
  color: #ffffff !important;
}

/* Method 2: Apply to html and body specifically */
html::selection,
body::selection {
  background: #b95d28 !important;
  color: white !important;
}

html::-webkit-selection,
body::-webkit-selection {
  background: #b95d28 !important;
  color: white !important;
}

/* Method 3: Enable selection and remove iOS restrictions */
html,
body,
* {
  -webkit-user-select: text !important;
  -webkit-touch-callout: default !important;
  -webkit-tap-highlight-color: transparent !important;
}

/* Method 4: Target specific content areas where selection is most important */
main::selection,
article::selection,
section::selection,
.content::selection {
  background: #b95d28 !important;
  color: white !important;
}

main::-webkit-selection,
article::-webkit-selection,
section::-webkit-selection,
.content::-webkit-selection {
  background: #b95d28 !important;
  color: white !important;
}

/* Method 5: JavaScript fallback approach - add this to your JS */
/*
// Add this JavaScript as a fallback
document.addEventListener('DOMContentLoaded', function() {
  // Create a stylesheet specifically for selection
  const style = document.createElement('style');
  style.innerHTML = `
    ::selection { background: #b95d28 !important; color: white !important; }
    ::-webkit-selection { background: #b95d28 !important; color: white !important; }
  `;
  document.head.appendChild(style);
  
  // Force enable text selection on iOS
  document.body.style.webkitUserSelect = 'text';
  document.body.style.webkitTouchCallout = 'default';
});
*/

/* Method 6: Alternative - use rgba for better compatibility */
::selection {
  background: rgba(185, 93, 40, 0.8) !important;
  color: rgba(255, 255, 255, 1) !important;
}

::-webkit-selection {
  background: rgba(185, 93, 40, 0.8) !important;
  color: rgba(255, 255, 255, 1) !important;
}

/* Method 7: iOS-specific media query approach */
@supports (-webkit-touch-callout: none) {
  /* iOS Safari specific styles */
  ::selection {
    background-color: #b95d28 !important;
    color: #ffffff !important;
  }

  ::-webkit-selection {
    background-color: #b95d28 !important;
    color: #ffffff !important;
  }
}

/* Method 8: Ensure no conflicting styles */
* {
  /* Remove any styles that might interfere */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0) !important;
}

/* Method 9: Apply to common text elements individually */
p,
h1,
h2,
h3,
h4,
h5,
h6,
span,
a,
li,
td,
th,
div {
  -webkit-user-select: text !important;
}

p::selection,
h1::selection,
h2::selection,
h3::selection,
h4::selection,
h5::selection,
h6::selection,
span::selection,
a::selection,
li::selection,
td::selection,
th::selection,
div::selection {
  background: #b95d28 !important;
  color: white !important;
}

p::-webkit-selection,
h1::-webkit-selection,
h2::-webkit-selection,
h3::-webkit-selection,
h4::-webkit-selection,
h5::-webkit-selection,
h6::-webkit-selection,
span::-webkit-selection,
a::-webkit-selection,
li::-webkit-selection,
td::-webkit-selection,
th::-webkit-selection,
div::-webkit-selection {
  background: #b95d28 !important;
  color: white !important;
}
